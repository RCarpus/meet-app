{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","handleClickDetailsButton","e","current","state","expanded","setState","eventDetailsButtonText","this","event","className","summary","start","dateTime","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleSuggestionClicked","suggestion","updateEvents","numberOfEvents","type","onChange","onFocus","style","display","NumberOfEvents","RemoveNonNumeric","number","updateNumberOfEvents","text","replace","htmlFor","mockData","JSON","parse","stringify","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","slice","mounted","React","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ecf776bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import './css/Event.css';\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      expanded: false,\r\n      eventDetailsButtonText: 'More details'\r\n    };\r\n  }\r\n\r\n  handleClickDetailsButton = (e) => {\r\n    const current = this.state.expanded;\r\n    this.setState({\r\n      expanded: current ? false : true,\r\n      eventDetailsButtonText: current ? 'More details' : 'Hide details'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { expanded, eventDetailsButtonText } = this.state;\r\n    const { event } = this.props;\r\n    return (\r\n      <div className='event'>\r\n        <h2 className='event__name'>{event.summary}</h2>\r\n        <p className='event__start'>{event.start.dateTime}</p>\r\n        <p className='event__title-line-2'>\r\n          <span className='event__title-line-2__at-sign'>@</span>\r\n          <span className='event__title-line-2__title'>{event.summary}</span>\r\n          <span className='event__title-line-2__pipe'> | </span>\r\n          <span className='event__title-line-2__city'>{event.location}</span>\r\n        </p>\r\n\r\n        {expanded &&\r\n          <div className='event__more-details' >\r\n            <h3 className='event__more-details__about-label'>About event</h3>\r\n            <p className='event__more-details__link-line'>\r\n              <a className='event__more-details__link-line__link' href={event.htmlLink} >{event.htmlLink}</a>\r\n            </p>\r\n            <p className='event__more-details__description'>{event.description}</p>\r\n          </div>\r\n        }\r\n\r\n        <button className='event__details-button'\r\n          onClick={(e) => this.handleClickDetailsButton(e)}>{eventDetailsButtonText}</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, {Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event => \r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  };\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: event.target.value,\r\n      suggestions\r\n    });\r\n  }\r\n\r\n  handleSuggestionClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion, this.props.numberOfEvents);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"citySearch\">\r\n        <input type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : {display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li key={suggestion} onClick={() => this.handleSuggestionClicked(suggestion)}>{suggestion}</li>\r\n          ))}\r\n          <li key=\"all\" onClick={() => this.handleSuggestionClicked(\"all\")}>\r\n            <b >See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n// import './css/NumberOfEvents.css';\r\n\r\nclass NumberOfEvents extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      number: 32\r\n    };\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = this.RemoveNonNumeric(event.target.value);\r\n    this.setState({\r\n      number: value,\r\n    });\r\n    \r\n    //unit test for NumberOfEvents fails if it tries to run this function\r\n    if (this.props.updateNumberOfEvents)\r\n      this.props.updateNumberOfEvents(value);\r\n\r\n  }\r\n\r\n  RemoveNonNumeric = (text) => {\r\n    return text.replace(/[^0-9]/g, '');\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"number-of-events\">\r\n        <label id=\"number-of-events__label\" htmlFor=\"number-of-events__input\">Number of Events:</label>\r\n        <input id=\"number-of-events__input\" value={this.state.number} onChange={this.handleInputChanged} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = JSON.parse(JSON.stringify([{\r\n  \"kind\": \"calendar#event\",\r\n  \"etag\": \"\\\"3181161784712000\\\"\",\r\n  \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n  \"status\": \"confirmed\",\r\n  \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n  \"created\": \"2020-05-19T19:17:46.000Z\",\r\n  \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n  \"summary\": \"Learn JavaScript\",\r\n  \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n  \"location\": \"London, UK\",\r\n  \"creator\": {\r\n   \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n   \"self\": true\r\n  },\r\n  \"organizer\": {\r\n   \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n   \"self\": true\r\n  },\r\n  \"start\": {\r\n   \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n   \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"end\": {\r\n   \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n   \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n  \"originalStartTime\": {\r\n   \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n   \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n  \"sequence\": 0,\r\n  \"reminders\": {\r\n   \"useDefault\": true\r\n  },\r\n  \"eventType\": \"default\"\r\n },\r\n {\r\n  \"kind\": \"calendar#event\",\r\n  \"etag\": \"\\\"3181159875584000\\\"\",\r\n  \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n  \"status\": \"confirmed\",\r\n  \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n  \"created\": \"2020-05-19T19:14:30.000Z\",\r\n  \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n  \"summary\": \"React is Fun\",\r\n  \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n  \"location\": \"Berlin, Germany\",\r\n  \"creator\": {\r\n   \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n   \"self\": true\r\n  },\r\n  \"organizer\": {\r\n   \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n   \"self\": true\r\n  },\r\n  \"start\": {\r\n   \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n   \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"end\": {\r\n   \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n   \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n  \"originalStartTime\": {\r\n   \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n   \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n  \"sequence\": 0,\r\n  \"reminders\": {\r\n   \"useDefault\": true\r\n  },\r\n  \"eventType\": \"default\"\r\n }\r\n]));\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  /**\r\n   * Send access token to the google API server.\r\n   * If the token is valid, get a json response.\r\n   * If the token is invalid, we get an error object.\r\n   * If we get an error, that is checked by ' || tokenCheck.error '\r\n   * in the getAccessToken function. This would cause you to be \r\n   * sent to the authorization screen to get a valid token.\r\n   */\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n  return result;\r\n}\r\n\r\nconst removeQuery = () => {\r\n  /**\r\n   * This function removes the code from the url\r\n   */\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl = \r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n}\r\n\r\nconst getToken = async (code) => {\r\n  /**\r\n   * Takes an access code and sends it to the Google API to exchange for an access token\r\n   */\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://hv2altwv0j.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem('access_token', access_token);\r\n\r\n    return access_token;\r\n}\r\n\r\nexport const getEvents = async () => {\r\n  /**\r\n   * We use the mock data when we are testing on localhost,\r\n   * but we use the real API data when we are live.\r\n   */\r\n  NProgress.start(); //This is a loading bar libray\r\n\r\n  //Return mock data while testing\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  } \r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery(); //remove the code from the url once we are done with it\r\n    const url = `https://hv2altwv0j.execute-api.us-east-1.amazonaws.com/dev/api/get-calendar-events/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  /* Step 1 is to check and see if the user already has a valid access token */\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  /* If there is no valid access token, we need to get one */\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    /* There is no valid access token, but we can check for a valid code */\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      /* There is no code, so redirect to my getAuthUrl endpoint */\r\n      const results = await axios.get(\r\n        \"https://hv2altwv0j.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}","import React from 'react';\r\nimport './css/App.css';\r\nimport './css/nprogress.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from './api';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: '32',\r\n    location: 'all'\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events: events.slice(0,this.state.numberOfEvents), \r\n                        locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location, numberOfEvents) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all') ?\r\n        events.slice(0,numberOfEvents) :\r\n        events.filter((event) => event.location === location).slice(0,numberOfEvents);\r\n\r\n      this.setState({\r\n        events: locationEvents.slice(0,numberOfEvents),\r\n        location\r\n      });\r\n    });\r\n  }\r\n\r\n  updateNumberOfEvents = (numberOfEvents) => {\r\n    this.setState({\r\n      numberOfEvents\r\n    }, this.updateEvents(this.state.location, numberOfEvents));\r\n  }\r\n\r\n\r\n  render() {\r\n    const { events, locations, numberOfEvents } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch locations={locations} updateEvents={this.updateEvents} />\r\n        <NumberOfEvents updateNumberOfEvents={number => { this.updateNumberOfEvents(number) } }/>\r\n        <EventList events={events} numberOfEvents={numberOfEvents} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}